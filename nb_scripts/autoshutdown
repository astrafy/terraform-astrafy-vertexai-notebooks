#!/bin/bash

COUNTER=0
# Maximum amount of MACHINE == INACTIVE entries until shutdown
COUNTER_THRESHOLD=${autoshutdown_counter_threshold}
# Seconds since last detected activity for Jupyter Kernel and Jupyter Terminal sessions to be assigned as INACTIVE
IDLE_TIMEOUT_SECONDS=${autoshutdown_idle_timeout_seconds}
# Period of time between checks
SLEEP_SECONDS=${autoshutdown_sleep_seconds}

# Jupyter endpoints
URL_SESSIONS="http://127.0.0.1:8080/api/sessions"
URL_TERMINALS="http://127.0.0.1:8080/api/terminals"

while true; do

    ACTIVE_USER_SESSIONS=$(loginctl list-sessions | awk '/sessions listed/ {print $1}')

    if [ -z "$ACTIVE_USER_SESSIONS" ]
    then
        USER_SESSION="INACTIVE"
    else
        USER_SESSION="ACTIVE"
    fi

    CURRENT_DATE=$(date +'%s')
    JUPYTER_KERNEL_BUSY_STATE=$(curl -s $URL_SESSIONS | jq '[ .[] | .kernel.execution_state | values ]')
    LAST_JUPYTER_KERNEL_SESSION=$(curl -s $URL_SESSIONS | jq '[ .[] | .kernel.last_activity | sub(".[0-9]+Z$"; "Z") | fromdate ] | max | values')
    LAST_JUPYTER_TERMINAL_SESSION=$(curl -s $URL_TERMINALS | jq '[ .[] | .last_activity | sub(".[0-9]+Z$"; "Z") | fromdate ] | max | values')

    if [ $CURRENT_DATE -gt $((LAST_JUPYTER_KERNEL_SESSION + IDLE_TIMEOUT_SECONDS)) ] || [ -z "$LAST_JUPYTER_KERNEL_SESSION" ]
    then
        KERNEL="INACTIVE"
    else
        KERNEL="ACTIVE" 
    fi
   

    if [ $CURRENT_DATE -gt $((LAST_JUPYTER_TERMINAL_SESSION + IDLE_TIMEOUT_SECONDS)) ] || [ -z "$LAST_JUPYTER_TERMINAL_SESSION" ]
    then
        TERMINAL="INACTIVE"
    else
        TERMINAL="ACTIVE"
    fi
    
    if [[ $JUPYTER_KERNEL_BUSY_STATE == *"busy"* ]];
    then
        NOTEBOOK_STATE="ACTIVE"
    else
        NOTEBOOK_STATE="INACTIVE"
    fi

    if [ "$USER_SESSION" == "INACTIVE" ]  &&  [ "$TERMINAL" == "INACTIVE" ]  &&  [ "$NOTEBOOK_STATE" == "INACTIVE" ]  &&  [ "$KERNEL" == "INACTIVE" ];then
        MACHINE="INACTIVE"
        COUNTER=$((COUNTER+1))
    else
        MACHINE="ACTIVE"
        COUNTER=0
    fi
    
    
    if [ $COUNTER -gt $COUNTER_THRESHOLD ]; then 
        shutdown now
    fi    

    echo "AUTOSHUTDOWN: MACHINE: $MACHINE - COUNTER: $COUNTER/$COUNTER_THRESHOLD - USER SESSION: $USER_SESSION - TERMINAL: $TERMINAL - KERNEL: $KERNEL - NOTEBOOK_STATE: $NOTEBOOK_STATE"
    
    sleep $SLEEP_SECONDS
done
